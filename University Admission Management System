#include <stdio.h>
#include <stdlib.h>
#include <string.h>


struct Student {
    char name[50];
    char password[50];
    char department[50];
    float totalGPA;
    int age;
    char fatherName[50];
    char motherName[50];
    char city[50];
    char email[100];
    char phoneNumber[15];
    char bloodGroup[5];
    char transactionID[20];
};


struct AdmissionForm {
    char name[50];

};


struct Student createStudentAccount();
int logIn(struct Student *studentList, int *loggedInIndex);
void displayStudentDetails(struct Student student);
void displayAdmissionFormDetails(struct AdmissionForm form);
void user();
void admin();
void updateUniversityData();
void manageAppliedStudents(struct AdmissionForm *appliedStudents, int *numAppliedStudents);

int main() {
    system("COLOR 60");
    int choice;
    printf("\n\n                       University Admission Management System\n\n");
    printf("                   1. User                                    2. Admin\n\n");
    printf("                                      3. Exit\n\n\n");
    printf("Enter your choice: ");
    scanf("%d", &choice);

    switch (choice) {
        case 1:
            user();
            break;
        case 2:
            admin();
            break;
        case 3:
            printf("Exiting the program. Goodbye!\n");
            break;
        default:
            printf("Invalid choice. Please try again.\n");
            break;
    }

    return 0;
}

struct Student createStudentAccount() {
    struct Student newStudent;
    printf("\nEnter Name: ");
    scanf(" %[^\n]", newStudent.name);

    printf("Enter Password: ");
    scanf(" %[^\n]", newStudent.password);



    return newStudent;
}

int logIn(struct Student *studentList, int *loggedInIndex) {
    char name[50];
    char password[50];

    printf("\nEnter Username: ");
    scanf(" %[^\n]", name);

    printf("Enter Password: ");
    scanf(" %[^\n]", password);


    for (int i = 0; i < *loggedInIndex; i++) {
        if (strcmp(studentList[i].name, name) == 0 && strcmp(studentList[i].password, password) == 0) {
            printf("\nLogin successful!\n");
            return i;
        }
    }

    printf("Login failed. Student not found or incorrect password.\n");
    return -1;
}

void displayStudentDetails(struct Student student) {
    printf("\nStudent Details:\n");
    printf("Name: %s\n", student.name);
    printf("Age: %d\n", student.age);
    printf("Department: %s\n", student.department);

}

void displayAdmissionFormDetails(struct AdmissionForm form) {
    printf("\nAdmission Form Details:\n");
    printf("Name: %s\n", form.name);
}

void user() {
    int maxStudents = 100;
    struct Student *studentList = malloc(maxStudents * sizeof(struct Student));
    if (!studentList) {
        printf("Failed to allocate memory for student list.\n");
        return;
    }
    int loggedInIndex = 0;
    int userChoice;

    do {
        printf("\n--- Student Dashbord ---\n");
        printf("1. Create Account\n");
        printf("2. Log In\n");
        printf("3. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &userChoice);

        switch (userChoice) {
            case 1: {
                studentList[loggedInIndex++] = createStudentAccount();
                printf("Account created successfully!\n");
                break;
            }

            case 2: {
                int loginIndex = logIn(studentList, &loggedInIndex);
                if (loginIndex != -1) {
                    int studentChoice;
                    do {
                        printf("\n      --- MANU ---\n");
                        printf("1. About the University\n");
                        printf("2. Departments\n");
                        printf("3. Apply for Registration\n");
                        printf("4. Log Out\n");
                        printf("Enter your choice: ");
                        scanf("%d", &studentChoice);

                        switch (studentChoice) {
                            case 1:
                                printf("\nDaffodil International University (DIU) is a private university located in Dhaka, Bangladesh.\nIt was established in 2002 and has since grown to become one of the prominent private universities in the country.\n");
                                break;

                            case 2: {
                                printf("\nDepartments\n");
                                printf("1. Faculty Details:\n2. Students & Alumni Details:\n3. GPA Requirement: \n4. Tuition Fees:\n");
                                int departmentChoice;
                                printf("Enter your choice: ");
                                scanf("%d", &departmentChoice);

                                switch (departmentChoice) {
                                    case 1:
                                        printf("\n          ---Faculty Details:---\n");
                                        printf("i) CSE- in Faculty 20 teachers\n");
                                        printf("ii) SWE- in Faculty 25 teachers\n");
                                        printf("iii) NEF- in Faculty 20 teachers\n");
                                        printf("iv) JMC- in Faculty 22 teachers\n");
                                        printf("v) Pharmacy- in Faculty 20 teachers\n");
                                        printf("FOR MORE-Back to manu\n\n");
                                        // faculty details
                                        break;
                                    case 2:
                                        printf("\n          ---Students & Alumni Details:---\n");
                                        printf("i) CSE- student 2000 running and 1500 alumni\n");
                                        printf("ii) SWE- student 1800 running and 1000 alumni\n");
                                        printf("iii) NEF- student 1000 running and 800 alumni\n");
                                        printf("iv) JMC- student 500 running and 500 alumni\n");
                                        printf("v) Pharmacy- student 150 running and 400 alumni\n");
                                        printf("FOR MORE-Back to manu\n\n");
                                        //students & alumni details
                                        break;
                                    case 3:
                                        printf("\n          ---GPA Requirement:---\n");
                                        printf("i) CSE- need 9.00\n");
                                        printf("ii) SWE- need 8.75\n");
                                        printf("iii) NEF- need 8.5\n");
                                        printf("iv) JMC- need 8.5\n");
                                        printf("v) Pharmacy- need 8.0\n");
                                        printf("FOR MORE-Back to manu\n\n");
                                        //GPA requirements
                                        break;
                                    case 4:
                                        printf("\n          ---Tuition Fees:---\n");
                                        printf("i) CSE- fees 4 years- 8,00,000 taka\n");
                                        printf("ii) SWE- fees 4 years- 7,50,000 taka\n");
                                        printf("iii) NEF- fees 4 years- 5,00,000 taka\n");
                                        printf("iv) JMC- fees 4 years- 7,00,000 taka\n");
                                        printf("v) Pharmacy- fees 4 years- 9,60,000 taka\n");
                                        printf("FOR MORE-Back to manu\n\n");
                                        // tuition fees
                                        break;

                                    default:
                                        printf("Invalid choice. Please enter a valid option.\n");
                                }
                                break;
                            }
                            case 3: {
                                printf("\n               ---Application For Admission---\n");
                                float totalGPA;
                                printf("\n CSE- need 9.00\n SWE- need 8.75\n NEF- need 8.5\n JMC- need 8.0\n Enter your Total GPA (out of 10): ");
                                scanf("%f", &totalGPA);

                                if (totalGPA >= 9.0) {
                                    strcpy(studentList[loginIndex].department, "CSE");
                                } else if (totalGPA >= 8.75) {
                                    strcpy(studentList[loginIndex].department, "SWE");
                                } else if (totalGPA >= 8.5) {
                                    strcpy(studentList[loginIndex].department, "NEF");
                                } else if (totalGPA >= 8.0) {
                                    strcpy(studentList[loginIndex].department, "JMC");
                                } else {
                                    printf("Sorry, your GPA doesn't meet the criteria for any department.\n");
                                    break;
                                }

                                printf("Enter Age: ");
                                scanf("%d", &studentList[loginIndex].age);
                                printf("Enter Father's Name: ");
                                scanf(" %[^\n]", studentList[loginIndex].fatherName);
                                printf("Enter Mother's Name: ");
                                scanf(" %[^\n]", studentList[loginIndex].motherName);
                                printf("Enter City: ");
                                scanf(" %[^\n]", studentList[loginIndex].city);
                                printf("Enter Email: ");
                                scanf(" %[^\n]", studentList[loginIndex].email);
                                printf("Enter Phone Number: ");
                                scanf(" %[^\n]", studentList[loginIndex].phoneNumber);
                                printf("Enter Blood Group: ");
                                scanf(" %[^\n]", studentList[loginIndex].bloodGroup);
                                printf("Enter Transaction ID of Payment: ");
                                scanf(" %[^\n]", studentList[loginIndex].transactionID);
                                printf("\nAdmission form submitted successfully!\n  Exam will held on: \nDate: 9 Dec 2023\nVenu:Daffodil Smart City, Dhaka.\n");

                               void displayStudentDetails(struct Student student); // Add parentheses
                                break;
                            }
                            case 4:
                                printf("\nLogged out successfully!\n");
                                break;

                            default:
                                printf("Invalid choice. Please enter a valid option.\n");
                        }
                    } while (studentChoice != 4);
                }
                break;
            }

            case 3:
                printf("Exiting the program. Goodbye!\n");
                break;

            default:
                printf("Invalid choice. Please enter a valid option.\n");
        }

    } while (userChoice != 3);

    free(studentList);
}

void admin() {
    struct AdmissionForm appliedStudents[100];
    int numAppliedStudents = 0;

    char adminPassword[50] = "admin123"; // Admin password

    char enteredPassword[50];
    printf("Enter Admin Password: ");
    scanf(" %[^\n]", enteredPassword);

    if (strcmp(adminPassword, enteredPassword) == 0) {
        printf("Admin Login Successful!\n");

        int adminChoice;
        do {
            printf("\nAdmin Menu\n");
            printf("1. Update University Data\n");
            printf("2. Applied Student Information\n");
            printf("3. Exit\n");
            printf("Enter your choice: ");
            scanf("%d", &adminChoice);

            switch (adminChoice) {
                case 1:
                    updateUniversityData();
                    break;

                case 2:
                    manageAppliedStudents(appliedStudents, &numAppliedStudents);
                    break;

                case 3:
                    printf("\nThanks For Using the Admin Panel. Goodbye!\n");
                    break;

                default:
                    printf("Invalid choice. Please enter a valid option.\n");
            }
        } while (adminChoice != 3);
    } else {
        printf("Admin Login Failed. Incorrect password.\n");
    }
}

void updateUniversityData() {
    int updateChoice;
    printf("\nUpdate University Data:\n");
    printf("1. Faculty Details\n");
    printf("2. Students & Alumni Details\n");
    printf("3. Tuition Fees\n");
    printf("4. GPA Requirement\n");
    printf("5. Exit\n");
    printf("Enter your choice: ");
    scanf("%d", &updateChoice);

    switch (updateChoice) {
        case 1:
            printf("\nUpdating Faculty Details...\n");
            printf("i) CSE- in Faculty 20 teachers\n");
            printf("ii) SWE- in Faculty 25 teachers\n");
            printf("iii) NEF- in Faculty 20 teachers\n");
            printf("iv) JMC- in Faculty 22 teachers\n");
            printf("v) Pharmacy- in Faculty 20 teachers\n");
            //update faculty details
            break;

        case 2:
            printf("\nUpdating Students & Alumni Details...\n");
              printf("i) CSE- student 2000 running and 1500 alumni\n");
            printf("ii) SWE- student 1800 running and 1000 alumni\n");
            printf("iii) NEF- student 1000 running and 800 alumni\n");
            printf("iv) JMC- student 500 running and 500 alumni\n");
            printf("v) Pharmacy- student 150 running and 400 alumni\n");
            //update students & alumni details
            break;

        case 3:
            printf("\nUpdating Tuition Fees...\n");
             printf("i) CSE- fees 4 years- 8,00,000 taka\n");
            printf("ii) SWE- fees 4 years- 7,50,000 taka\n");
            printf("iii) NEF- fees 4 years- 5,00,000 taka\n");
            printf("iv) JMC- fees 4 years- 7,00,000 taka\n");
            printf("v) Pharmacy- fees 4 years- 9,60,000 taka\n");
            // update tuition fees
            break;

        case 4:
            printf("\nUpdating GPA Requirement...\n");
            printf("i) CSE- need 9.00\n");
            printf("ii) SWE- need 8.75\n");
            printf("iii) NEF- need 8.5\n");
            printf("iv) JMC- need 8.5\n");
            printf("v) Pharmacy- need 8.00\n");
            //update GPA requirements
            break;

        case 5:
            printf("\nExiting Update University Data.\n");
            break;

        default:
            printf("Invalid choice. Please enter a valid option.\n");
    }
}

void manageAppliedStudents(struct AdmissionForm *appliedStudents, int *numAppliedStudents) {
    int manageChoice;
    printf("\nManage Applied Student Information:\n");
    printf("1. Count\n");
    printf("2. Add\n");
    printf("3. Delete\n");
    printf("4. Search\n");
    printf("5. Exit\n");
    printf("Enter your choice: ");
    scanf("%d", &manageChoice);

    switch (manageChoice) {
        case 1:
            printf("\nNumber of Applied Students: %d\n", *numAppliedStudents);
            break;

        case 2:
            printf("\nAdding a New Student...\n");
           char searchName[50];
            printf("\nEnter the Name to Delete: ");
            scanf("%s", searchName);

            int indexToDelete = -1;
            for (int i = 0; i < *numAppliedStudents; ++i) {
                if (strcmp(appliedStudents[i].name, searchName) == 0) {
                    indexToDelete = i;
                    break;
                }
            }

            if (indexToDelete != -1) {
                for (int i = indexToDelete; i < *numAppliedStudents - 1; ++i) {
                    appliedStudents[i] = appliedStudents[i + 1];
                }
                (*numAppliedStudents)--;
                printf("Student %s deleted successfully.\n", searchName);
            } else {
                printf("Student %s not found.\n", searchName);
            }
            break;

        case 3:
            printf("\nDeleting a Student...\n");
            printf("***WE are Working On it***\n\n");
            // Logic to delete a student
            break;

        case 4:
            printf("\nSearching for a Student...\n");
            printf("***WE are Working On it***\n\n");
            // Logic to search for a student
            break;

        case 5:
            printf("\nExiting Manage Applied Student Information.\n");
            break;

        default:
            printf("Invalid choice. Please enter a valid option.\n");
    }
}
